1. 

#include <iostream>
using namespace std;

int minInArray(int arr[], int arr_size);
void findInArray(int input_arr[], int arr_size, int query, int search_results_arr[]);

const int ARRAY_SIZE = 20;

int main(){

	int input_arr[ARRAY_SIZE];
	int search_results_arr[ARRAY_SIZE];
	int min_in_array;

	cout<<"Please enter 20 integers separated by a space: <<endl;
	cin >> input_arr[0];

	min_in_array = minInArray(input_arr, ARRAY_SIZE);
	findInArray(input_arr, ARRAY_SIZE, min_in_array, search_results_arr);

cout<<"The minimum value is "<<min_in_array<<", and it is located in the following indicies: "<<search_results_arr<<endl;
	

}


int minInArray(int arr[], int arr_size){

	int min_in_array;

	for(int index = 0; index < arr_size; index++){

		if(index == 0){
		
		min_in_array = arr[index];		

		}
		else{
		
			if(arr[index]<min_in_array){
			
			min_in_array = arr[index];			

			}

		)
	
	}

	return min_in_array;
}

//do I need the & sign here?

void findInArray(int input_arr[], int arr_size, int query, int& search_results_arr[]){

	for(int index = 0; index < arr_size; index++){

		if(input_arr[index] == query){

			search_results_arr[index] == index	;	

		}

	}

}

2.

int main(){

	string input;
	
	cout<<Please enter a word: <<;
	cin>>input;

	if(isPalindrome(input) == true){
	
		cout<<input<<" is a palindrome"<<endl;	

	}
	else{
	
		cout<<input<<" is not a palindrome"<<endl;

	}


}

bool isPalindrome(string str){

	int length = str.length() - 1;

	for(i = 0; i <= length/2; i++){

		if(str[i] != str[length-i]){

			return false;		

		}

	}

	return true;	

}

3. 

void reverseArray(int arr[], int arr_size){

	int temp;

	for(i = 0; i <= arr_size/2; i++){

		temp=arr[i];
		arr[i] = arr[arr_size-i];
		arr[arr_size-i] = temp;

	}

}

void removeOdd(int arr[], int& arr_size){

	for(i = 0; i <= arr_size-1; i++){

		if((arr[i] % 2) > 0){

			arr[i] == null;
			arr_size--		

		}

	}

}

void splitParity(int arr[], int arr_size){

	int temp;
	int rear_index = arr_size;

	for(i = 0; i <= arr_size -1; i++){
	
		while(arr[rear_index] % 2 == 0){
	
			rear_index--;

		}		

		if(arr[i] % 2 == 0){
			
			if(i < rear_index){
				temp = arr[i];
				arr[i] = arr[rear_index];
				arr[rear_index] = temp;
			}

		}		

	}

}


4. 

void generateHash(int& arr[], int arr_length);
void printArray(int arr[] int arr_length);
void pwToArray(int pw_input, int& arr[], int arr_length);
void pwToHash(int pw_arr[], int pw_arr_length, int& pw_hash_arr[], int hash_arr[]);
bool checkPw(int pw_input_hash_arr[], int pw_length, int pw_hash[]);

int main(){

	const int PW = 12345;
	const int PW_LENGTH = 5;
	const int HASH_LENGTH = 10;
	int template_arr[HASH_LENGTH] = {0,1,2,3,4,5,6,7,8,9};
	int hash_arr[HASH_LENGTH];
	int pw_hash_arr[PW_LENGTH];
	int pw_input;
	int pw_input_arr[PW_LENGTH];
	int pw_input_hash_arr[PW_LENGTH];
	bool is_correct;

	generateHash(hash, HASH_LENGTH);

	cout<<"Please enter your PIN according to the following mapping:"<<endl;
	printArray(template_arr, HASH_LENGTH);
	cout<<"\n"
	printArray(hash_arr, HASH_LENGTH);
	cin>>pw_input;
	
	intToArray(PW, pw_hash_arr, PW_LENGTH); 
	intToArray(pw_input, pw_input_arr, PW_LENGTH);
	pwToHash(pw_input_arr, PW_LENGTH, pw_input_hash_arr, hash_arr);
	is_correct = checkPw(pw_input_hash_arr, PW_LENGTH, pw_hash_arr);

	if(is_correct == true){

		cout<<"Your PIN is correct"<<endl;	

	}
	else{

		cout<<"Your PIN is not correct"<<endl;
		
	}		
	
}

void generateHash(int& arr[], int arr_length){

	for(i = 0; i <= arr_length; i++){

		arr[i] = rand() % 3 + 1;

	}

}

void printArray(int arr[], int arr_length){

	for(i = 0; i <= arr_length; i++){

		cout<<arr[i]+" ";

	}

}

\\Do I need & here?

void intToArray(int input, int& arr[], int arr_length){

	for(i = arr_length; i <= 0; i--){

		arr[i] = input % 10;
		input / 10;

	}


}

\\do I need the &?

void pwToHash(int pw_arr[], int pw_arr_length, int pw_hash_arr[], int hash_arr[]){

	for(i = 0; i <= pw_arr_length; i++){

		pw_hash_arr[i] = hash_arr[pw_arr[i]+1]];

	}



}

bool checkPw(int pw_input_hash_arr[], int pw_length, int pw_hash[]){

	for(i = 0; i <= pw_length; i++){

		if(pw_input_hash_arr[i] != pw_hash[i]){
		
			return false;

		}

	}

	return true;

}

5. 

int main(){

	string first_input;
	string middle_input;
	string last_input;

	cin>>first_input>>middle_input>>last_input;


	cout<<last_input<<", "<<first_input<<", "<<middle_input[0]<<"."<<endl;

}

6. 

int numSpaces(string str);
bool allDigits(string str);

int main(){
    
    string input;
    string output;
    int space_index;
    int num_spaces;
    string temp;

    getline(cin, input);

    num_spaces = numSpaces(input);
    
    for(int i = 0; i <= num_spaces; i++){
        
        space_index = input.find(" ");
        temp = input.substr(0,space_index);
        input = input.substr(space_index+1,input.length());
        cout<<"temp: "<<temp<<endl;
        cout<<"length: "<<temp.length()<<endl;
        cout<<"all digits(temp): "<<allDigits(temp)<<endl;
        cout<<"input: "<<input<<endl;
        cout<<"output: "<<output<<endl;
        if(allDigits(temp) == true){
            
            for(int i=0; i <= temp.length()-1; i++){
                
                output = output+"x";
                
            }
            
        }
        else{
            
            output = output + temp;
            
        }
        
        output = output + " ";
        
    }
    
    cout<<output<<endl;
}

bool allDigits(string str){
    
    for(int i = 0; i <= str.length(); i++){
        
        if(str[i] != '0' && str[i] != '1' && str[i] != '2' && str[i] != '3' && str[i] != '4' && str[i] != '5' && str[i] != '6' && str[i] != '7' && str[i] != '8' && str[i] != '9'){
            
            cout<<"string: "<<str[i]<<endl;
            return false;
        }
        else{
            i++;
        }
    }
    
    return true;
}

int numSpaces(string str){
    
    string comp = "l";
    
    int num_spaces;
    for(int i=0; i <= str.length(); i++){
        if(str[i] == ' '){
            num_spaces++;
        }
    }
    
    return num_spaces;
}

7.

use two arrays

take in sentence
count number of spaces or ,_ or ._ or .

int main(){
	
	int const LETTERS = 26;
	char letters[LETTERS] = {a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z};
	int letter_count[LETTERS];
	string input;
	int num_words;

	cout<<"Please enter a line of text"<<endl;
	
	getline(cin, input);
	num_words = countWordsAndLetters(input, letter_count);

	cout<<num_words<<"\t"<<"words"<<endl;
	

}

int countWordsAndLetters(string str, int letter_count_arr[]){

	int num_words;
    	for(int i=0; i <= str.length(); i++){
        	if(str[i] == ' ' || str[i] == '.'){
            		num_words++;
        	}
		else{

		//use ascii somehow, cap and low

		}
    	}	

}

void printLetterCount(char letter_arr[], int letter_count_arr[], int arr_length){

	for(i = 0; i <= arr_length; i++){

		cout<<letter_count_arr[i]<<"/t"<<letter_arr[i]<<endl;

	}

}


8. 
